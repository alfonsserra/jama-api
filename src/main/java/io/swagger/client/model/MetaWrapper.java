/*
 * Jama REST API
 * This is the documentation for the Jama REST API.
 *
 * OpenAPI spec version: latest
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * MetaWrapper
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-03-07T18:50:05.195+01:00")
public class MetaWrapper {
  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    OK("OK"),
    
    CREATED("CREATED"),
    
    ACCEPTED("ACCEPTED"),
    
    NO_CONTENT("NO_CONTENT"),
    
    RESET_CONTENT("RESET_CONTENT"),
    
    PARTIAL_CONTENT("PARTIAL_CONTENT"),
    
    MOVED_PERMANENTLY("MOVED_PERMANENTLY"),
    
    FOUND("FOUND"),
    
    SEE_OTHER("SEE_OTHER"),
    
    NOT_MODIFIED("NOT_MODIFIED"),
    
    USE_PROXY("USE_PROXY"),
    
    TEMPORARY_REDIRECT("TEMPORARY_REDIRECT"),
    
    BAD_REQUEST("BAD_REQUEST"),
    
    UNAUTHORIZED("UNAUTHORIZED"),
    
    PAYMENT_REQUIRED("PAYMENT_REQUIRED"),
    
    FORBIDDEN("FORBIDDEN"),
    
    NOT_FOUND("NOT_FOUND"),
    
    METHOD_NOT_ALLOWED("METHOD_NOT_ALLOWED"),
    
    NOT_ACCEPTABLE("NOT_ACCEPTABLE"),
    
    PROXY_AUTHENTICATION_REQUIRED("PROXY_AUTHENTICATION_REQUIRED"),
    
    REQUEST_TIMEOUT("REQUEST_TIMEOUT"),
    
    CONFLICT("CONFLICT"),
    
    GONE("GONE"),
    
    LENGTH_REQUIRED("LENGTH_REQUIRED"),
    
    PRECONDITION_FAILED("PRECONDITION_FAILED"),
    
    REQUEST_ENTITY_TOO_LARGE("REQUEST_ENTITY_TOO_LARGE"),
    
    REQUEST_URI_TOO_LONG("REQUEST_URI_TOO_LONG"),
    
    UNSUPPORTED_MEDIA_TYPE("UNSUPPORTED_MEDIA_TYPE"),
    
    REQUESTED_RANGE_NOT_SATISFIABLE("REQUESTED_RANGE_NOT_SATISFIABLE"),
    
    EXPECTATION_FAILED("EXPECTATION_FAILED"),
    
    INTERNAL_SERVER_ERROR("INTERNAL_SERVER_ERROR"),
    
    NOT_IMPLEMENTED("NOT_IMPLEMENTED"),
    
    BAD_GATEWAY("BAD_GATEWAY"),
    
    SERVICE_UNAVAILABLE("SERVICE_UNAVAILABLE"),
    
    GATEWAY_TIMEOUT("GATEWAY_TIMEOUT"),
    
    HTTP_VERSION_NOT_SUPPORTED("HTTP_VERSION_NOT_SUPPORTED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("timestamp")
  private OffsetDateTime timestamp = null;

  public MetaWrapper status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public MetaWrapper timestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MetaWrapper metaWrapper = (MetaWrapper) o;
    return Objects.equals(this.status, metaWrapper.status) &&
        Objects.equals(this.timestamp, metaWrapper.timestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, timestamp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MetaWrapper {\n");
    
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

