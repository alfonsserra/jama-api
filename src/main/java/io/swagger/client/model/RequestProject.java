/*
 * Jama REST API
 * This is the documentation for the Jama REST API.
 *
 * OpenAPI spec version: latest
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * RequestProject
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-03-07T18:50:05.195+01:00")
public class RequestProject {
  @SerializedName("projectKey")
  private String projectKey = null;

  @SerializedName("isFolder")
  private Boolean isFolder = null;

  @SerializedName("parent")
  private Integer parent = null;

  @SerializedName("fields")
  private Map<String, Object> fields = new HashMap<String, Object>();

  public RequestProject projectKey(String projectKey) {
    this.projectKey = projectKey;
    return this;
  }

   /**
   * Not Required if isFolder is true
   * @return projectKey
  **/
  @ApiModelProperty(required = true, value = "Not Required if isFolder is true")
  public String getProjectKey() {
    return projectKey;
  }

  public void setProjectKey(String projectKey) {
    this.projectKey = projectKey;
  }

  public RequestProject isFolder(Boolean isFolder) {
    this.isFolder = isFolder;
    return this;
  }

   /**
   * Get isFolder
   * @return isFolder
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsFolder() {
    return isFolder;
  }

  public void setIsFolder(Boolean isFolder) {
    this.isFolder = isFolder;
  }

  public RequestProject parent(Integer parent) {
    this.parent = parent;
    return this;
  }

   /**
   * parent project
   * @return parent
  **/
  @ApiModelProperty(value = "parent project")
  public Integer getParent() {
    return parent;
  }

  public void setParent(Integer parent) {
    this.parent = parent;
  }

  public RequestProject fields(Map<String, Object> fields) {
    this.fields = fields;
    return this;
  }

  public RequestProject putFieldsItem(String key, Object fieldsItem) {
    this.fields.put(key, fieldsItem);
    return this;
  }

   /**
   * A map of field names to field values e.g. {\&quot;name\&quot;:\&quot;Sample Project\&quot;, \&quot;status\&quot;: 292, \&quot;release\&quot;: 2, \&quot;projectManager\&quot;: 23}
   * @return fields
  **/
  @ApiModelProperty(required = true, value = "A map of field names to field values e.g. {\"name\":\"Sample Project\", \"status\": 292, \"release\": 2, \"projectManager\": 23}")
  public Map<String, Object> getFields() {
    return fields;
  }

  public void setFields(Map<String, Object> fields) {
    this.fields = fields;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RequestProject requestProject = (RequestProject) o;
    return Objects.equals(this.projectKey, requestProject.projectKey) &&
        Objects.equals(this.isFolder, requestProject.isFolder) &&
        Objects.equals(this.parent, requestProject.parent) &&
        Objects.equals(this.fields, requestProject.fields);
  }

  @Override
  public int hashCode() {
    return Objects.hash(projectKey, isFolder, parent, fields);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RequestProject {\n");
    
    sb.append("    projectKey: ").append(toIndentedString(projectKey)).append("\n");
    sb.append("    isFolder: ").append(toIndentedString(isFolder)).append("\n");
    sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

