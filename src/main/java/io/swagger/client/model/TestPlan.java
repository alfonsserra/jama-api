/*
 * Jama REST API
 * This is the documentation for the Jama REST API.
 *
 * OpenAPI spec version: latest
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.AllowedResource;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.threeten.bp.OffsetDateTime;

/**
 * TestPlan
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-03-07T18:50:05.195+01:00")
public class TestPlan {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("documentKey")
  private String documentKey = null;

  @SerializedName("globalId")
  private String globalId = null;

  @SerializedName("project")
  private Integer project = null;

  @SerializedName("itemType")
  private Integer itemType = null;

  @SerializedName("createdDate")
  private OffsetDateTime createdDate = null;

  @SerializedName("modifiedDate")
  private OffsetDateTime modifiedDate = null;

  @SerializedName("lastActivityDate")
  private OffsetDateTime lastActivityDate = null;

  @SerializedName("createdBy")
  private Integer createdBy = null;

  @SerializedName("modifiedBy")
  private Integer modifiedBy = null;

  @SerializedName("resources")
  private Map<String, AllowedResource> resources = new HashMap<String, AllowedResource>();

  @SerializedName("fields")
  private Map<String, Object> fields = new HashMap<String, Object>();

  @SerializedName("archived")
  private Boolean archived = null;

  public TestPlan id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public TestPlan documentKey(String documentKey) {
    this.documentKey = documentKey;
    return this;
  }

   /**
   * Get documentKey
   * @return documentKey
  **/
  @ApiModelProperty(required = true, value = "")
  public String getDocumentKey() {
    return documentKey;
  }

  public void setDocumentKey(String documentKey) {
    this.documentKey = documentKey;
  }

  public TestPlan globalId(String globalId) {
    this.globalId = globalId;
    return this;
  }

   /**
   * Get globalId
   * @return globalId
  **/
  @ApiModelProperty(required = true, value = "")
  public String getGlobalId() {
    return globalId;
  }

  public void setGlobalId(String globalId) {
    this.globalId = globalId;
  }

  public TestPlan project(Integer project) {
    this.project = project;
    return this;
  }

   /**
   * ID of a project
   * @return project
  **/
  @ApiModelProperty(required = true, value = "ID of a project")
  public Integer getProject() {
    return project;
  }

  public void setProject(Integer project) {
    this.project = project;
  }

  public TestPlan itemType(Integer itemType) {
    this.itemType = itemType;
    return this;
  }

   /**
   * ID of an item type
   * @return itemType
  **/
  @ApiModelProperty(required = true, value = "ID of an item type")
  public Integer getItemType() {
    return itemType;
  }

  public void setItemType(Integer itemType) {
    this.itemType = itemType;
  }

  public TestPlan createdDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

   /**
   * Get createdDate
   * @return createdDate
  **/
  @ApiModelProperty(required = true, value = "")
  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }

  public TestPlan modifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = modifiedDate;
    return this;
  }

   /**
   * Get modifiedDate
   * @return modifiedDate
  **/
  @ApiModelProperty(required = true, value = "")
  public OffsetDateTime getModifiedDate() {
    return modifiedDate;
  }

  public void setModifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = modifiedDate;
  }

  public TestPlan lastActivityDate(OffsetDateTime lastActivityDate) {
    this.lastActivityDate = lastActivityDate;
    return this;
  }

   /**
   * Get lastActivityDate
   * @return lastActivityDate
  **/
  @ApiModelProperty(required = true, value = "")
  public OffsetDateTime getLastActivityDate() {
    return lastActivityDate;
  }

  public void setLastActivityDate(OffsetDateTime lastActivityDate) {
    this.lastActivityDate = lastActivityDate;
  }

  public TestPlan createdBy(Integer createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * ID of a user
   * @return createdBy
  **/
  @ApiModelProperty(required = true, value = "ID of a user")
  public Integer getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(Integer createdBy) {
    this.createdBy = createdBy;
  }

  public TestPlan modifiedBy(Integer modifiedBy) {
    this.modifiedBy = modifiedBy;
    return this;
  }

   /**
   * ID of a user
   * @return modifiedBy
  **/
  @ApiModelProperty(required = true, value = "ID of a user")
  public Integer getModifiedBy() {
    return modifiedBy;
  }

  public void setModifiedBy(Integer modifiedBy) {
    this.modifiedBy = modifiedBy;
  }

  public TestPlan resources(Map<String, AllowedResource> resources) {
    this.resources = resources;
    return this;
  }

  public TestPlan putResourcesItem(String key, AllowedResource resourcesItem) {
    this.resources.put(key, resourcesItem);
    return this;
  }

   /**
   * A set of resources and allowed permissions
   * @return resources
  **/
  @ApiModelProperty(required = true, value = "A set of resources and allowed permissions")
  public Map<String, AllowedResource> getResources() {
    return resources;
  }

  public void setResources(Map<String, AllowedResource> resources) {
    this.resources = resources;
  }

  public TestPlan fields(Map<String, Object> fields) {
    this.fields = fields;
    return this;
  }

  public TestPlan putFieldsItem(String key, Object fieldsItem) {
    this.fields.put(key, fieldsItem);
    return this;
  }

   /**
   * A map of field names to field values e.g. {\&quot;name\&quot;:\&quot;Sample Item\&quot;, \&quot;status\&quot;: 292, \&quot;release\&quot;: 2, \&quot;assigned\&quot;: 23}
   * @return fields
  **/
  @ApiModelProperty(required = true, value = "A map of field names to field values e.g. {\"name\":\"Sample Item\", \"status\": 292, \"release\": 2, \"assigned\": 23}")
  public Map<String, Object> getFields() {
    return fields;
  }

  public void setFields(Map<String, Object> fields) {
    this.fields = fields;
  }

  public TestPlan archived(Boolean archived) {
    this.archived = archived;
    return this;
  }

   /**
   * Get archived
   * @return archived
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isArchived() {
    return archived;
  }

  public void setArchived(Boolean archived) {
    this.archived = archived;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestPlan testPlan = (TestPlan) o;
    return Objects.equals(this.id, testPlan.id) &&
        Objects.equals(this.documentKey, testPlan.documentKey) &&
        Objects.equals(this.globalId, testPlan.globalId) &&
        Objects.equals(this.project, testPlan.project) &&
        Objects.equals(this.itemType, testPlan.itemType) &&
        Objects.equals(this.createdDate, testPlan.createdDate) &&
        Objects.equals(this.modifiedDate, testPlan.modifiedDate) &&
        Objects.equals(this.lastActivityDate, testPlan.lastActivityDate) &&
        Objects.equals(this.createdBy, testPlan.createdBy) &&
        Objects.equals(this.modifiedBy, testPlan.modifiedBy) &&
        Objects.equals(this.resources, testPlan.resources) &&
        Objects.equals(this.fields, testPlan.fields) &&
        Objects.equals(this.archived, testPlan.archived);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, documentKey, globalId, project, itemType, createdDate, modifiedDate, lastActivityDate, createdBy, modifiedBy, resources, fields, archived);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestPlan {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    documentKey: ").append(toIndentedString(documentKey)).append("\n");
    sb.append("    globalId: ").append(toIndentedString(globalId)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    itemType: ").append(toIndentedString(itemType)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    lastActivityDate: ").append(toIndentedString(lastActivityDate)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    modifiedBy: ").append(toIndentedString(modifiedBy)).append("\n");
    sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("    archived: ").append(toIndentedString(archived)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

