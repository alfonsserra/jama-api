/*
 * Jama REST API
 * This is the documentation for the Jama REST API.
 *
 * OpenAPI spec version: latest
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Relationship
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-03-07T18:50:05.195+01:00")
public class Relationship {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("fromItem")
  private Integer fromItem = null;

  @SerializedName("toItem")
  private Integer toItem = null;

  @SerializedName("relationshipType")
  private Integer relationshipType = null;

  @SerializedName("suspect")
  private Boolean suspect = null;

  public Relationship id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public Relationship fromItem(Integer fromItem) {
    this.fromItem = fromItem;
    return this;
  }

   /**
   * ID of an item
   * @return fromItem
  **/
  @ApiModelProperty(required = true, value = "ID of an item")
  public Integer getFromItem() {
    return fromItem;
  }

  public void setFromItem(Integer fromItem) {
    this.fromItem = fromItem;
  }

  public Relationship toItem(Integer toItem) {
    this.toItem = toItem;
    return this;
  }

   /**
   * ID of an item
   * @return toItem
  **/
  @ApiModelProperty(required = true, value = "ID of an item")
  public Integer getToItem() {
    return toItem;
  }

  public void setToItem(Integer toItem) {
    this.toItem = toItem;
  }

  public Relationship relationshipType(Integer relationshipType) {
    this.relationshipType = relationshipType;
    return this;
  }

   /**
   * ID of a relationship type
   * @return relationshipType
  **/
  @ApiModelProperty(required = true, value = "ID of a relationship type")
  public Integer getRelationshipType() {
    return relationshipType;
  }

  public void setRelationshipType(Integer relationshipType) {
    this.relationshipType = relationshipType;
  }

  public Relationship suspect(Boolean suspect) {
    this.suspect = suspect;
    return this;
  }

   /**
   * Get suspect
   * @return suspect
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isSuspect() {
    return suspect;
  }

  public void setSuspect(Boolean suspect) {
    this.suspect = suspect;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Relationship relationship = (Relationship) o;
    return Objects.equals(this.id, relationship.id) &&
        Objects.equals(this.fromItem, relationship.fromItem) &&
        Objects.equals(this.toItem, relationship.toItem) &&
        Objects.equals(this.relationshipType, relationship.relationshipType) &&
        Objects.equals(this.suspect, relationship.suspect);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, fromItem, toItem, relationshipType, suspect);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Relationship {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    fromItem: ").append(toIndentedString(fromItem)).append("\n");
    sb.append("    toItem: ").append(toIndentedString(toItem)).append("\n");
    sb.append("    relationshipType: ").append(toIndentedString(relationshipType)).append("\n");
    sb.append("    suspect: ").append(toIndentedString(suspect)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

