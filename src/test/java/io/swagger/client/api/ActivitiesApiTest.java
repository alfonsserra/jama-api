/*
 * Jama REST API
 * This is the documentation for the Jama REST API.
 *
 * OpenAPI spec version: latest
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.AbstractRestResponse;
import io.swagger.client.model.ActivityDataListWrapper;
import io.swagger.client.model.ActivityDataWrapper;
import io.swagger.client.model.ItemDataListWrapper;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ActivitiesApi
 */
@Ignore
public class ActivitiesApiTest {

    private final ActivitiesApi api = new ActivitiesApi();

    
    /**
     * Get all activities in the project with the specified ID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getActivitiesTest() throws ApiException {
        Integer project = null;
        List<String> eventType = null;
        List<String> objectType = null;
        List<Integer> itemType = null;
        List<String> date = null;
        Boolean deleteEvents = null;
        Integer startAt = null;
        Integer maxResults = null;
        List<String> include = null;
        ActivityDataListWrapper response = api.getActivities(project, eventType, objectType, itemType, date, deleteEvents, startAt, maxResults, include);

        // TODO: test validations
    }
    
    /**
     * Get the activity with the specified ID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getActivityByIdTest() throws ApiException {
        Integer activityId = null;
        List<String> include = null;
        ActivityDataWrapper response = api.getActivityById(activityId, include);

        // TODO: test validations
    }
    
    /**
     * Get all items affected by the activity with the specified ID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAffectedItemsTest() throws ApiException {
        Integer activityId = null;
        Integer startAt = null;
        Integer maxResults = null;
        List<String> include = null;
        ItemDataListWrapper response = api.getAffectedItems(activityId, startAt, maxResults, include);

        // TODO: test validations
    }
    
    /**
     * Restore item(s) associated with a delete activity.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void restoreItemsTest() throws ApiException {
        Integer activityId = null;
        AbstractRestResponse response = api.restoreItems(activityId);

        // TODO: test validations
    }
    
}
