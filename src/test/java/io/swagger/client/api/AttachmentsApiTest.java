/*
 * Jama REST API
 * This is the documentation for the Jama REST API.
 *
 * OpenAPI spec version: latest
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.AbstractRestResponse;
import io.swagger.client.model.AttachmentDataWrapper;
import io.swagger.client.model.CommentDataListWrapper;
import io.swagger.client.model.FormDataMultiPart;
import io.swagger.client.model.LockDataWrapper;
import io.swagger.client.model.RequestLock;
import io.swagger.client.model.VersionDataListWrapper;
import io.swagger.client.model.VersionDataWrapper;
import io.swagger.client.model.VersionedAttachmentDataWrapper;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AttachmentsApi
 */
@Ignore
public class AttachmentsApiTest {

    private final AttachmentsApi api = new AttachmentsApi();

    
    /**
     * Download attachment file from the attachment with the specified ID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void downloadFileTest() throws ApiException {
        Integer attachmentId = null;
        api.downloadFile(attachmentId);

        // TODO: test validations
    }
    
    /**
     * Get the attachment with the specified ID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAttachmentItemTest() throws ApiException {
        Integer attachmentId = null;
        List<String> include = null;
        AttachmentDataWrapper response = api.getAttachmentItem(attachmentId, include);

        // TODO: test validations
    }
    
    /**
     * Get all comments for the item with the specified ID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getItemCommentsTest() throws ApiException {
        Integer attachmentId = null;
        Integer startAt = null;
        Integer maxResults = null;
        Boolean rootCommentsOnly = null;
        List<String> include = null;
        CommentDataListWrapper response = api.getItemComments(attachmentId, startAt, maxResults, rootCommentsOnly, include);

        // TODO: test validations
    }
    
    /**
     * Get the locked state, last locked date, and last locked by user for the item with the specified ID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getLockTest() throws ApiException {
        Integer attachmentId = null;
        List<String> include = null;
        LockDataWrapper response = api.getLock(attachmentId, include);

        // TODO: test validations
    }
    
    /**
     * Get the numbered version for the item with the specified ID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getVersionOnItem1Test() throws ApiException {
        Integer versionNum = null;
        Integer attachmentId = null;
        List<String> include = null;
        VersionDataWrapper response = api.getVersionOnItem1(versionNum, attachmentId, include);

        // TODO: test validations
    }
    
    /**
     * Get the  snapshot of the attachment at the specified version
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getVersionedItem1Test() throws ApiException {
        Integer versionNum = null;
        Integer attachmentId = null;
        List<String> include = null;
        VersionedAttachmentDataWrapper response = api.getVersionedItem1(versionNum, attachmentId, include);

        // TODO: test validations
    }
    
    /**
     * Get all versions for the item with the specified ID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getVersionsOnItem1Test() throws ApiException {
        Integer attachmentId = null;
        Integer startAt = null;
        Integer maxResults = null;
        List<String> include = null;
        VersionDataListWrapper response = api.getVersionsOnItem1(attachmentId, startAt, maxResults, include);

        // TODO: test validations
    }
    
    /**
     * Update the locked state of the item with the specified ID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateLockTest() throws ApiException {
        RequestLock body = null;
        Integer attachmentId = null;
        AbstractRestResponse response = api.updateLock(body, attachmentId);

        // TODO: test validations
    }
    
    /**
     * Upload attachment file to the attachment with the specified ID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void uploadFileTest() throws ApiException {
        Integer attachmentId = null;
        FormDataMultiPart body = null;
        AbstractRestResponse response = api.uploadFile(attachmentId, body);

        // TODO: test validations
    }
    
}
