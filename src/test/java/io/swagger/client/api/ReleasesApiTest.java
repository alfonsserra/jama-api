/*
 * Jama REST API
 * This is the documentation for the Jama REST API.
 *
 * OpenAPI spec version: latest
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.AbstractRestResponse;
import io.swagger.client.model.CreatedResponse;
import io.swagger.client.model.ReleaseDataListWrapper;
import io.swagger.client.model.ReleaseDataWrapper;
import io.swagger.client.model.RequestRelease;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReleasesApi
 */
@Ignore
public class ReleasesApiTest {

    private final ReleasesApi api = new ReleasesApi();

    
    /**
     * Create a new release
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addReleaseTest() throws ApiException {
        RequestRelease body = null;
        CreatedResponse response = api.addRelease(body);

        // TODO: test validations
    }
    
    /**
     * Get the release with the specified ID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getReleaseTest() throws ApiException {
        Integer releaseId = null;
        List<String> include = null;
        ReleaseDataWrapper response = api.getRelease(releaseId, include);

        // TODO: test validations
    }
    
    /**
     * Get all releases in the project with the specified ID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getReleasesTest() throws ApiException {
        Integer project = null;
        Integer startAt = null;
        Integer maxResults = null;
        List<String> include = null;
        ReleaseDataListWrapper response = api.getReleases(project, startAt, maxResults, include);

        // TODO: test validations
    }
    
    /**
     * Update the release with the specified ID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void putReleaseTest() throws ApiException {
        RequestRelease body = null;
        Integer releaseId = null;
        AbstractRestResponse response = api.putRelease(body, releaseId);

        // TODO: test validations
    }
    
}
